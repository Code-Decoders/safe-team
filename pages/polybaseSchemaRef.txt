// This is an example collection definition.
// You should edit it for your use case.

// The language (Polylang) is similar to JavaScript,
// but semi-colons are mandatory.

// The `collection` keyword defines a named collection.
// Collection properties define the "columns" in a record.

// @`public` means that the collection is public, anyone can view and read
// the records in the collection. You can still implement rules on who can 
// edit the data by defining functions on the collection and checking the public key.

@public
collection User {
  // `id` is unique and required on all collections
  id: string;
  eoa: string;
  teams: string[]; 

  // `constructor` is called when a new record is
  // created, make sure to assign a value to `this.id`
  constructor (_eoa: string) {
    // `this.id` must be assigned in the constructor
    // `this.id` must be unique in collection
    this.id = _eoa;
    this.eoa = _eoa;
    this.teams = [];
  }

  addTeam (_team: string) {
    this.teams.push(_team);
  }
}

collection Team {
  // `id` is unique and required on all collections
  id: string;
  safew: string;
  name: string;
  members: string[];

  // `constructor` is called when a new record is
  // created, make sure to assign a value to `this.id`
  constructor (_safew: string, _name: string) {
    // `this.id` must be assigned in the constructor
    // `this.id` must be unique in collection
    this.id = _safew;
    this.safew = _safew;
    this.name = _name;
    this.members = [];
  }

  function addMembers (_add: string) {
    this.members.push(_add);
  }
}